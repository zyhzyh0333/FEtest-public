{"ast":null,"code":"var _jsxFileName = \"/Users/yihuazhou/Desktop/My Code Mac/MyGitHub/FEtest/fetest/myfe-test-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport Select from 'react-select';\nimport { components } from \"react-select\";\nimport { useState } from \"react\";\nimport Navbar from \"./components/navbar\";\nimport './App.css';\nimport Counters from \"./components/counters\";\nimport Genres from \"./components/genres\";\nimport Data from \"./mock-data.json\"; // const genreOptions = [\n//   { value: 'Any Genre', label: 'Any Genre' },\n//   { value: 'Action', label: 'Action' },\n//   { value: 'Comedy', label: 'Comedy' },\n//   { value: 'Drama', label: 'Drama' },\n//   { value: 'Thriller', label: 'Thrill' },\n// ];\n// ☆⌒★\n\n/**\n * Adding checkbox to dropdown selection bar\n *\n * reference: https://medium.com/geekculture/creating-multi-select-dropdown-with-checkbox-in-react-792ff2464ef3\n */\n// const Option = (props) => {\n//   return (\n//     <div>\n//       <components.Option {...props}>\n//         <input\n//           type=\"checkbox\"\n//           checked={props.isSelected}\n//           onChange={() => null}\n//         />{\" \"}\n//         <label>{props.label}</label>\n//       </components.Option>\n//     </div>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      curData: Data,\n      inputStr: \"\",\n      selectedGenreOption: []\n    };\n\n    this.updateCurData = (str, genreObjArr, ratingArr) => {\n      let tmpData = Data; // filter by inputStr\n      // TODO: deleting all the input will show all the selections\n\n      tmpData = Data.filter(post => {\n        if (str === '') {\n          return post;\n        } else if (post.Title.toLowerCase().includes(str.toLowerCase())) {\n          return post;\n        }\n      }); // filter by genre selected\n\n      let genreArr = [];\n\n      for (var i = 0; i < genreObjArr.length; i++) {\n        genreArr.push(genreObjArr[i].value);\n      }\n\n      tmpData = tmpData.filter(post => {\n        if (genreArr.length === 0) {\n          return post;\n        } else if (genreArr.includes(\"Any Genre\")) {\n          return post;\n        } else if (genreArr.includes(post.Category)) {\n          return post;\n        }\n      }); // TODO\n\n      return tmpData;\n    };\n\n    this.setQueryFromInput = str => {\n      const tmpData = this.updateCurData(str, this.state.selectedGenreOption, []);\n      this.setState({\n        curData: tmpData,\n        inputStr: str\n      });\n    };\n\n    this.setQueryFromGenre = selectedOpts => {\n      const tmpData = this.updateCurData(this.state.inputStr, selectedOpts, []);\n      this.setState({\n        curData: tmpData,\n        selectedGenreOption: selectedOpts\n      });\n    };\n\n    this.handleInput = str => {\n      this.setQueryFromInput(str);\n    };\n\n    this.handleGenreChange = selected => {\n      this.setQueryFromGenre(selected);\n    };\n  }\n\n  render() {\n    // console.log(typeof Data[0].Category)\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"searchWindow\",\n          placeholder: \"Enter Post Title\",\n          onChange: event => this.setQueryFromInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), this.state.curData.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.Rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Genres, {\n          onChange: this.handleGenreChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // export default function App (){\n//   const [query, setQuery] = useState(\"\")\n//   return (\n//   <div>\n//     <input id=\"searchWindow\" placeholder=\"Enter Post Title\" onChange={event => setQuery(event.target.value)} />\n//     {\n//       Data.filter(post => {\n//         if (query === '') {\n//           return post;\n//         } else if (post.email.toLowerCase().includes(query.toLowerCase())) {\n//           return post;\n//         }\n//       }).\n//       map((post, index) => {\n//         return(\n//         <div className=\"box\" key={index}>\n//           <p>{post.email}</p>\n//           <p>{post.gender}</p>\n//         </div>\n//       )})\n//     }\n//   </div>\n//   )\n// }","map":{"version":3,"names":["React","Component","Select","components","useState","Navbar","Counters","Genres","Data","App","state","curData","inputStr","selectedGenreOption","updateCurData","str","genreObjArr","ratingArr","tmpData","filter","post","Title","toLowerCase","includes","genreArr","i","length","push","value","Category","setQueryFromInput","setState","setQueryFromGenre","selectedOpts","handleInput","handleGenreChange","selected","render","event","target","map","Rating","id"],"sources":["/Users/yihuazhou/Desktop/My Code Mac/MyGitHub/FEtest/fetest/myfe-test-app/src/App.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport Select from 'react-select';\nimport { components } from \"react-select\";\nimport {useState} from \"react\";\nimport Navbar from \"./components/navbar\";\nimport './App.css';\nimport Counters from \"./components/counters\";\nimport Genres from \"./components/genres\";\nimport Data from \"./mock-data.json\"\n\n// const genreOptions = [\n//   { value: 'Any Genre', label: 'Any Genre' },\n//   { value: 'Action', label: 'Action' },\n//   { value: 'Comedy', label: 'Comedy' },\n//   { value: 'Drama', label: 'Drama' },\n//   { value: 'Thriller', label: 'Thrill' },\n// ];\n\n// ☆⌒★\n\n/**\n * Adding checkbox to dropdown selection bar\n *\n * reference: https://medium.com/geekculture/creating-multi-select-dropdown-with-checkbox-in-react-792ff2464ef3\n */\n// const Option = (props) => {\n//   return (\n//     <div>\n//       <components.Option {...props}>\n//         <input\n//           type=\"checkbox\"\n//           checked={props.isSelected}\n//           onChange={() => null}\n//         />{\" \"}\n//         <label>{props.label}</label>\n//       </components.Option>\n//     </div>\n//   );\n// };\n\n\nclass App extends React.Component{\n\n  state = {\n    curData: Data,\n    inputStr: \"\",\n    selectedGenreOption: [],\n  }\n\n  /**\n   * Combine the constraints of \"inputStr\", \"selected Genre\", \"selected Ratings\"\n   * return a new \"curData\"\n   * @param str\n   * @param genreArr\n   * @param ratingArr\n   */\n  updateCurData = (str, genreObjArr, ratingArr) => {\n    let tmpData = Data\n    // filter by inputStr\n    // TODO: deleting all the input will show all the selections\n    tmpData = Data.filter(post => {\n      if (str === '') {\n        return post;\n      } else\n        if (post.Title.toLowerCase().includes(str.toLowerCase())) {\n        return post;\n      }\n    });\n\n    // filter by genre selected\n    let genreArr = []\n    for (var i = 0; i < genreObjArr.length; i++) {\n      genreArr.push(genreObjArr[i].value);\n    }\n\n    tmpData = tmpData.filter(post => {\n      if (genreArr.length === 0) {\n        return post;\n      } else if (genreArr.includes(\"Any Genre\")) {\n        return post;\n      } else if (genreArr.includes(post.Category)) {\n        return post;\n      }\n    })\n    // TODO\n\n    return tmpData;\n  }\n\n  /**\n   * According to input, change the Query of objects outputs of searching window\n   *\n   * @param str input string\n   */\n  setQueryFromInput = (str) => {\n\n    const tmpData = this.updateCurData(str, this.state.selectedGenreOption, [])\n\n    this.setState({curData: tmpData, inputStr: str})\n  }\n\n  setQueryFromGenre = (selectedOpts) => {\n\n    const tmpData = this.updateCurData(this.state.inputStr, selectedOpts, [])\n\n    this.setState({curData: tmpData, selectedGenreOption: selectedOpts})\n  }\n\n  /**\n   * update input from searching window\n   * @param str input str\n   */\n  handleInput = (str) => {\n    this.setQueryFromInput(str)\n  }\n\n  /**\n   * update Genre change\n   * @param selected selected Genre\n   */\n  handleGenreChange = (selected) => {\n    this.setQueryFromGenre(selected)\n  };\n\n\n  render() {\n\n    // console.log(typeof Data[0].Category)\n\n    return (\n      <React.Fragment>\n        <div>\n          <input id=\"searchWindow\" placeholder=\"Enter Post Title\"\n                 onChange={event => this.setQueryFromInput(event.target.value)}/>\n          {\n            this.state.curData.map((post) => (\n              <div className=\"box\" key={post.id}>\n                <p>{post.Title}</p>\n                <p>{post.Rating}</p>\n              </div>\n            ))\n          }\n\n          {\n            <Genres\n              onChange={this.handleGenreChange} />\n          }\n\n          {/*<Select*/}\n          {/*  options={genreOptions}*/}\n          {/*  isMulti*/}\n          {/*  placeholder={\"Genre\"}*/}\n          {/*  closeMenuOnSelect={false}*/}\n          {/*  controlShouldRenderValue={false}*/}\n          {/*  hideSelectedOptions={false}*/}\n          {/*  components={{Option}}*/}\n          {/*  onChange={this.handleGenreChange}*/}\n          {/*  allowSelectAll={true}*/}\n          {/*  value={this.state.selectedGenreOption}*/}\n          {/*/>*/}\n        </div>\n\n\n      </React.Fragment>\n        );\n  }\n}\nexport default App;\n\n// export default function App (){\n//   const [query, setQuery] = useState(\"\")\n//   return (\n//   <div>\n//     <input id=\"searchWindow\" placeholder=\"Enter Post Title\" onChange={event => setQuery(event.target.value)} />\n//     {\n//       Data.filter(post => {\n//         if (query === '') {\n//           return post;\n//         } else if (post.email.toLowerCase().includes(query.toLowerCase())) {\n//           return post;\n//         }\n//       }).\n//       map((post, index) => {\n//         return(\n//         <div className=\"box\" key={index}>\n//           <p>{post.email}</p>\n//           <p>{post.gender}</p>\n//         </div>\n//       )})\n//     }\n//   </div>\n//   )\n// }\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}