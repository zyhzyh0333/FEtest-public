{"ast":null,"code":"var _jsxFileName = \"/Users/yihuazhou/Desktop/My Code Mac/MyGitHub/FEtest/fetest/myfe-test-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport Select from 'react-select';\nimport { components } from \"react-select\";\nimport { useState } from \"react\";\nimport Navbar from \"./components/navbar\";\nimport './App.css';\nimport Counters from \"./components/counters\";\nimport Data from \"./mock-data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genreOptions = [{\n  value: 'Any Genre',\n  label: 'Any Genre'\n}, {\n  value: 'Action',\n  label: 'Action'\n}, {\n  value: 'Comedy',\n  label: 'Comedy'\n}, {\n  value: 'Drama',\n  label: 'Drama'\n}, {\n  value: 'Thrill',\n  label: 'Thrill'\n}];\n/**\n * Adding checkbox to dropdown selection bar\n *\n * reference: https://medium.com/geekculture/creating-multi-select-dropdown-with-checkbox-in-react-792ff2464ef3\n */\n\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Option;\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      curData: Data,\n      inputStr: \"\",\n      selectedGenreOption: []\n    };\n\n    this.updateCurData = (str, genreObjArr, ratingArr) => {\n      let tmpData = Data; // filter by inputStr\n\n      tmpData = Data.filter(post => {\n        if (str === '') {\n          return post;\n        } else if (post.Title.toLowerCase().includes(str.toLowerCase())) {\n          return post;\n        }\n      }); // filter by genre selected\n\n      let genreArr = [];\n\n      for (var i = 0; i < genreObjArr.length; i++) {}\n\n      tmpData = tmpData.filter(post => {\n        if (genreArr.length === 0) {\n          return post;\n        } else if (genreArr.includes(\"Any Genre\")) {\n          return post;\n        } else if (genreArr.includes(post.Category)) {\n          return post;\n        }\n      }); // TODO\n\n      return tmpData;\n    };\n\n    this.setQueryFromInput = str => {\n      // const tmpData = Data.filter(post => {\n      //   if (str === '') {\n      //     return post;\n      //   } else if (post.Title.toLowerCase().includes(str.toLowerCase())) {\n      //     return post;\n      //   }\n      // });\n      const tmpData = this.updateCurData(str, this.state.selectedGenreOption, []);\n      this.setState({\n        curData: tmpData,\n        inputStr: str\n      });\n    };\n\n    this.setQueryFromGenre = selectedOpts => {\n      // const tmpData = Data.filter(post => {\n      //   if (str === '') {\n      //     return post;\n      //   } else if (post.Title.toLowerCase().includes(str.toLowerCase())) {\n      //     return post;\n      //   }\n      // });\n      const tmpData = this.updateCurData(this.state.inputStr, selectedOpts, []);\n      this.setState({\n        curData: tmpData,\n        selectedGenreOption: selectedOpts\n      });\n    };\n\n    this.handleInput = str => {\n      this.setQueryFromInput(str);\n    };\n\n    this.handleGenreChange = selected => {\n      this.setQueryFromGenre(selected); // this.setState({\n      //   selectedGenreOption: selected\n      // });\n    };\n  }\n\n  render() {\n    // console.log(typeof Data[0].Category)\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"searchWindow\",\n          placeholder: \"Enter Post Title\",\n          onChange: event => this.setQueryFromInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), this.state.curData.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.Rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Select, {\n          options: genreOptions,\n          isMulti: true,\n          closeMenuOnSelect: false,\n          hideSelectedOptions: false,\n          components: {\n            Option\n          },\n          onChange: this.handleGenreChange,\n          allowSelectAll: true,\n          value: this.state.selectedGenreOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // export default function App (){\n//   const [query, setQuery] = useState(\"\")\n//   return (\n//   <div>\n//     <input id=\"searchWindow\" placeholder=\"Enter Post Title\" onChange={event => setQuery(event.target.value)} />\n//     {\n//       Data.filter(post => {\n//         if (query === '') {\n//           return post;\n//         } else if (post.email.toLowerCase().includes(query.toLowerCase())) {\n//           return post;\n//         }\n//       }).\n//       map((post, index) => {\n//         return(\n//         <div className=\"box\" key={index}>\n//           <p>{post.email}</p>\n//           <p>{post.gender}</p>\n//         </div>\n//       )})\n//     }\n//   </div>\n//   )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"names":["React","Component","Select","components","useState","Navbar","Counters","Data","genreOptions","value","label","Option","props","isSelected","App","state","curData","inputStr","selectedGenreOption","updateCurData","str","genreObjArr","ratingArr","tmpData","filter","post","Title","toLowerCase","includes","genreArr","i","length","Category","setQueryFromInput","setState","setQueryFromGenre","selectedOpts","handleInput","handleGenreChange","selected","render","event","target","map","Rating","id"],"sources":["/Users/yihuazhou/Desktop/My Code Mac/MyGitHub/FEtest/fetest/myfe-test-app/src/App.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport Select from 'react-select';\nimport { components } from \"react-select\";\nimport {useState} from \"react\";\nimport Navbar from \"./components/navbar\";\nimport './App.css';\nimport Counters from \"./components/counters\";\nimport Data from \"./mock-data.json\"\n\nconst genreOptions = [\n  { value: 'Any Genre', label: 'Any Genre' },\n  { value: 'Action', label: 'Action' },\n  { value: 'Comedy', label: 'Comedy' },\n  { value: 'Drama', label: 'Drama' },\n  { value: 'Thrill', label: 'Thrill' },\n];\n\n/**\n * Adding checkbox to dropdown selection bar\n *\n * reference: https://medium.com/geekculture/creating-multi-select-dropdown-with-checkbox-in-react-792ff2464ef3\n */\nconst Option = (props) => {\n  return (\n    <div>\n      <components.Option {...props}>\n        <input\n          type=\"checkbox\"\n          checked={props.isSelected}\n          onChange={() => null}\n        />{\" \"}\n        <label>{props.label}</label>\n      </components.Option>\n    </div>\n  );\n};\n\n\nclass App extends React.Component{\n\n  state = {\n    curData: Data,\n    inputStr: \"\",\n    selectedGenreOption: [],\n  }\n\n  /**\n   * Combine the constraints of \"inputStr\", \"selected Genre\", \"selected Ratings\"\n   * return a new \"curData\"\n   * @param str\n   * @param genreArr\n   * @param ratingArr\n   */\n  updateCurData = (str, genreObjArr, ratingArr) => {\n    let tmpData = Data\n    // filter by inputStr\n    tmpData = Data.filter(post => {\n      if (str === '') {\n        return post;\n      } else if (post.Title.toLowerCase().includes(str.toLowerCase())) {\n        return post;\n      }\n    });\n\n    // filter by genre selected\n    let genreArr = []\n    for (var i = 0; i < genreObjArr.length; i++) {\n      \n    }\n\n    tmpData = tmpData.filter(post => {\n      if (genreArr.length === 0) {\n        return post;\n      } else if (genreArr.includes(\"Any Genre\")) {\n        return post;\n      } else if (genreArr.includes(post.Category)) {\n        return post;\n      }\n    })\n    // TODO\n\n    return tmpData;\n  }\n\n  /**\n   * According to input, change the Query of objects outputs of searching window\n   *\n   * @param str input string\n   */\n  setQueryFromInput = (str) => {\n    // const tmpData = Data.filter(post => {\n    //   if (str === '') {\n    //     return post;\n    //   } else if (post.Title.toLowerCase().includes(str.toLowerCase())) {\n    //     return post;\n    //   }\n    // });\n\n    const tmpData = this.updateCurData(str, this.state.selectedGenreOption, [])\n\n    this.setState({curData: tmpData, inputStr: str})\n  }\n\n  setQueryFromGenre = (selectedOpts) => {\n    // const tmpData = Data.filter(post => {\n    //   if (str === '') {\n    //     return post;\n    //   } else if (post.Title.toLowerCase().includes(str.toLowerCase())) {\n    //     return post;\n    //   }\n    // });\n\n    const tmpData = this.updateCurData(this.state.inputStr, selectedOpts, [])\n\n    this.setState({curData: tmpData, selectedGenreOption: selectedOpts})\n  }\n\n  /**\n   * update input from searching window\n   * @param str input str\n   */\n  handleInput = (str) => {\n    this.setQueryFromInput(str)\n  }\n\n  /**\n   * update Genre change\n   * @param selected selected Genre\n   */\n  handleGenreChange = (selected) => {\n    this.setQueryFromGenre(selected)\n    // this.setState({\n    //   selectedGenreOption: selected\n    // });\n  };\n\n\n  render() {\n\n    // console.log(typeof Data[0].Category)\n\n    return (\n      <React.Fragment>\n        <div>\n          <input id=\"searchWindow\" placeholder=\"Enter Post Title\"\n                 onChange={event => this.setQueryFromInput(event.target.value)}/>\n          {\n            this.state.curData.map((post) => (\n              <div className=\"box\" key={post.id}>\n                <p>{post.Title}</p>\n                <p>{post.Rating}</p>\n              </div>\n            ))\n          }\n\n          <Select\n            options={genreOptions}\n            isMulti\n            closeMenuOnSelect={false}\n            hideSelectedOptions={false}\n            components={{Option}}\n            onChange={this.handleGenreChange}\n            allowSelectAll={true}\n            value={this.state.selectedGenreOption}\n          />\n        </div>\n\n\n      </React.Fragment>\n        );\n  }\n}\nexport default App;\n\n// export default function App (){\n//   const [query, setQuery] = useState(\"\")\n//   return (\n//   <div>\n//     <input id=\"searchWindow\" placeholder=\"Enter Post Title\" onChange={event => setQuery(event.target.value)} />\n//     {\n//       Data.filter(post => {\n//         if (query === '') {\n//           return post;\n//         } else if (post.email.toLowerCase().includes(query.toLowerCase())) {\n//           return post;\n//         }\n//       }).\n//       map((post, index) => {\n//         return(\n//         <div className=\"box\" key={index}>\n//           <p>{post.email}</p>\n//           <p>{post.gender}</p>\n//         </div>\n//       )})\n//     }\n//   </div>\n//   )\n// }\n\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,YAAY,GAAG,CACnB;EAAEC,KAAK,EAAE,WAAT;EAAsBC,KAAK,EAAE;AAA7B,CADmB,EAEnB;EAAED,KAAK,EAAE,QAAT;EAAmBC,KAAK,EAAE;AAA1B,CAFmB,EAGnB;EAAED,KAAK,EAAE,QAAT;EAAmBC,KAAK,EAAE;AAA1B,CAHmB,EAInB;EAAED,KAAK,EAAE,OAAT;EAAkBC,KAAK,EAAE;AAAzB,CAJmB,EAKnB;EAAED,KAAK,EAAE,QAAT;EAAmBC,KAAK,EAAE;AAA1B,CALmB,CAArB;AAQA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EACxB,oBACE;IAAA,uBACE,QAAC,UAAD,CAAY,MAAZ,OAAuBA,KAAvB;MAAA,wBACE;QACE,IAAI,EAAC,UADP;QAEE,OAAO,EAAEA,KAAK,CAACC,UAFjB;QAGE,QAAQ,EAAE,MAAM;MAHlB;QAAA;QAAA;QAAA;MAAA,QADF,EAKK,GALL,eAME;QAAA,UAAQD,KAAK,CAACF;MAAd;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAbD;;KAAMC,M;;AAgBN,MAAMG,GAAN,SAAkBd,KAAK,CAACC,SAAxB,CAAiC;EAAA;IAAA;IAAA,KAE/Bc,KAF+B,GAEvB;MACNC,OAAO,EAAET,IADH;MAENU,QAAQ,EAAE,EAFJ;MAGNC,mBAAmB,EAAE;IAHf,CAFuB;;IAAA,KAe/BC,aAf+B,GAef,CAACC,GAAD,EAAMC,WAAN,EAAmBC,SAAnB,KAAiC;MAC/C,IAAIC,OAAO,GAAGhB,IAAd,CAD+C,CAE/C;;MACAgB,OAAO,GAAGhB,IAAI,CAACiB,MAAL,CAAYC,IAAI,IAAI;QAC5B,IAAIL,GAAG,KAAK,EAAZ,EAAgB;UACd,OAAOK,IAAP;QACD,CAFD,MAEO,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCR,GAAG,CAACO,WAAJ,EAAlC,CAAJ,EAA0D;UAC/D,OAAOF,IAAP;QACD;MACF,CANS,CAAV,CAH+C,CAW/C;;MACA,IAAII,QAAQ,GAAG,EAAf;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,WAAW,CAACU,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C,CAE5C;;MAEDP,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAeC,IAAI,IAAI;QAC/B,IAAII,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;UACzB,OAAON,IAAP;QACD,CAFD,MAEO,IAAII,QAAQ,CAACD,QAAT,CAAkB,WAAlB,CAAJ,EAAoC;UACzC,OAAOH,IAAP;QACD,CAFM,MAEA,IAAII,QAAQ,CAACD,QAAT,CAAkBH,IAAI,CAACO,QAAvB,CAAJ,EAAsC;UAC3C,OAAOP,IAAP;QACD;MACF,CARS,CAAV,CAjB+C,CA0B/C;;MAEA,OAAOF,OAAP;IACD,CA5C8B;;IAAA,KAmD/BU,iBAnD+B,GAmDVb,GAAD,IAAS;MAC3B;MACA;MACA;MACA;MACA;MACA;MACA;MAEA,MAAMG,OAAO,GAAG,KAAKJ,aAAL,CAAmBC,GAAnB,EAAwB,KAAKL,KAAL,CAAWG,mBAAnC,EAAwD,EAAxD,CAAhB;MAEA,KAAKgB,QAAL,CAAc;QAAClB,OAAO,EAAEO,OAAV;QAAmBN,QAAQ,EAAEG;MAA7B,CAAd;IACD,CA/D8B;;IAAA,KAiE/Be,iBAjE+B,GAiEVC,YAAD,IAAkB;MACpC;MACA;MACA;MACA;MACA;MACA;MACA;MAEA,MAAMb,OAAO,GAAG,KAAKJ,aAAL,CAAmB,KAAKJ,KAAL,CAAWE,QAA9B,EAAwCmB,YAAxC,EAAsD,EAAtD,CAAhB;MAEA,KAAKF,QAAL,CAAc;QAAClB,OAAO,EAAEO,OAAV;QAAmBL,mBAAmB,EAAEkB;MAAxC,CAAd;IACD,CA7E8B;;IAAA,KAmF/BC,WAnF+B,GAmFhBjB,GAAD,IAAS;MACrB,KAAKa,iBAAL,CAAuBb,GAAvB;IACD,CArF8B;;IAAA,KA2F/BkB,iBA3F+B,GA2FVC,QAAD,IAAc;MAChC,KAAKJ,iBAAL,CAAuBI,QAAvB,EADgC,CAEhC;MACA;MACA;IACD,CAhG8B;EAAA;;EAmG/BC,MAAM,GAAG;IAEP;IAEA,oBACE,QAAC,KAAD,CAAO,QAAP;MAAA,uBACE;QAAA,wBACE;UAAO,EAAE,EAAC,cAAV;UAAyB,WAAW,EAAC,kBAArC;UACO,QAAQ,EAAEC,KAAK,IAAI,KAAKR,iBAAL,CAAuBQ,KAAK,CAACC,MAAN,CAAajC,KAApC;QAD1B;UAAA;UAAA;UAAA;QAAA,QADF,EAII,KAAKM,KAAL,CAAWC,OAAX,CAAmB2B,GAAnB,CAAwBlB,IAAD,iBACrB;UAAK,SAAS,EAAC,KAAf;UAAA,wBACE;YAAA,UAAIA,IAAI,CAACC;UAAT;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAID,IAAI,CAACmB;UAAT;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,GAA0BnB,IAAI,CAACoB,EAA/B;UAAA;UAAA;UAAA;QAAA,QADF,CAJJ,eAYE,QAAC,MAAD;UACE,OAAO,EAAErC,YADX;UAEE,OAAO,MAFT;UAGE,iBAAiB,EAAE,KAHrB;UAIE,mBAAmB,EAAE,KAJvB;UAKE,UAAU,EAAE;YAACG;UAAD,CALd;UAME,QAAQ,EAAE,KAAK2B,iBANjB;UAOE,cAAc,EAAE,IAPlB;UAQE,KAAK,EAAE,KAAKvB,KAAL,CAAWG;QARpB;UAAA;UAAA;UAAA;QAAA,QAZF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EA6BD;;AApI8B;;AAsIjC,eAAeJ,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}